int min()
{
  // 1. 구문과 구문 사이는 세미콜론(;)으로 인식하고 있음 
  //    (;) : 현재 문장의 명령어는 끝난다라고 것을 나타냄. 매우 중요! 
  

  // 2. 연산자
  // 대입연산자 : =

  // 산술 연산자
  // +, -, *, /, %(모듈러스: 절대값을 취한다., 나머지)
  // ++, -- 
  int data = 10 + 10;
  // ⭐️⭐️ 연산자들간의 우선 순위가 있음! 위에서는 1. 산술연산자 먼저 2. 대입연산자 그 다음
  data = data + 20;
  
  // -> 반복되는 과정을 아래처럼 표현
  data += 20;
  
  // 실수끼리의 나눗셈은 나머지가 무한대로 나눔
  // data = 10. % 3.; (오류!)
  // 위처럼 적으면 컴퓨터가 계산할 수 없다고 오류를 냄!
  // ⭐️⭐️ 나머지 연산은 무조건 피연산자가 정수인경우에만 가능!!! 

  // 그러나 우리는 위에서 data 를 정수로 저장했기에 
  // data = 10. % 3.; 하면 계산은 됨 자연적으로 결과를 정수로 변환함!
  // 하지만 'double 에서 int 로 변환하면서 데이터가 손실 될 수 있다' 라는 경고 메세지가 씀! 
  // 그렇기에 명시적으로 적어주는 것이 필수! => 그러면 경고메세지는 사라짐
  data = (int)(10. / 3.);


  // 실수를 상수로 적을 경우 소수점 뒤에 f를 붙이면 float 자료형으로, f를 붙이지 않으면 double로 자동으로 간주하겠다.
  // 뒤에 . 을 붙이면 double로 보겠다.
  // .f 를 보면 4바이트 float으로 보겠다.
  // 10. => double
  // 10.f => float


  
  // return 0; 값이 없어도 자동으로 써주기 때문에 컴파일 에러가 나지 않음
}